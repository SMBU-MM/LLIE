# general settings
name: Enhancement_RetinexFormer_HQ_100SSIM
model_type: ImageCleanModel
scale: 1
num_gpu: 1 # set num_gpu: 0 for cpu mode
manual_seed: 100

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PairedImage
    dataroot_gt: /home/long/data/LLIE/LOLv1/LOLv1/Train/target
    dataroot_lq: /home/long/data/LLIE/LOLv1/LOLv1/Train/input
    geometric_augs: true

    filename_tmpl: "{}"
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 8

    ### -------------Progressive training--------------------------
    # mini_batch_sizes: [8, 5, 4, 2] # Batch size per gpu
    # iters: [46000, 32000, 24000, 18000]
    # gt_size: 256 # Max patch size for progressive training
    # gt_sizes: [128, 160, 192, 256] # Patch sizes for progressive training.
    # crop_size: 256
    # resize_ratio: 2
    # ### ------------------------------------------------------------

    ### ------- Training on single fixed-patch size 128x128---------
    mini_batch_sizes: [8]
    iters: [300000]
    gt_size: 128
    gt_sizes: [128]
    crop_size: 156
    resize_ratio: 2
    ### ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: ValSet
    type: Dataset_PairedImage
    dataroot_gt: /home/long/data/LLIE/LOLv1/LOLv1/Test/target
    dataroot_lq: /home/long/data/LLIE/LOLv1/LOLv1/Test/input
    io_backend:
      type: disk

# network structures
network_g:
  type: NewAttentionUNet2


network_d:
  type: UNetDiscriminatorSN
  num_in_ch: 3
  num_feat: 64
  skip_connection: True

# path
path:
  pretrain_network_g: /home/long/LLIE/Retinexformer/experiments/NewAttentionUNet2_COCO_ms_per_gan/best_lpips_0.098_86000.pth
  strict_load_g: true
  resume_state: ~

# training settings
train:
  total_iter: 1500000
  warmup_iter: -1 # no warm up
  use_grad_clip: true

  # Split 300k iterations into two cycles.
  # 1st cycle: fixed 3e-4 LR for 92k iters.
  # 2nd cycle: cosine annealing (3e-4 to 1e-6) for 208k iters.
  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [1000000, 1490000]
    restart_weights: [1, 2]
    eta_mins: [0.00002, 0.000001]

  mixing_augs:
    mixup: true
    mixup_beta: 1.2
    use_identity: true

  # ema_decay: 0.999

  optim_g:
    type: Adam
    lr: !!float 1e-4
    # weight_decay: !!float 1e-4
    betas: [0.9, 0.999]

  optim_d:
    type: Adam
    lr: !!float 2e-4
    # weight_decay: 0
    betas: [0.9, 0.999]

  # losses
  pixel_opt:
    type: MSL1Loss
    loss_weight: 1
    reduction: mean

  perceptual_opt:
    type: PerceptualLoss
    layer_weights:
      # before relu
      "conv1_2": 0.1
      "conv2_2": 0.1
      "conv3_4": 1
      "conv4_4": 1
      "conv5_4": 1
    vgg_type: vgg19
    use_input_norm: true
    perceptual_weight: !!float 1.0
    style_weight: 0
    range_norm: false
    criterion: l2

  gan_opt:
    type: GANLoss
    gan_type: vanilla
    real_label_val: 1.0
    fake_label_val: 0.0
    loss_weight: !!float 1e-1

  net_d_iters: 1
  net_d_init_iters: 0

  # clip_opt: true
# validation settings
val:
  window_size: 16
  val_freq: !!float 1e3
  save_img: false
  rgb2bgr: true
  use_image: false
  max_minibatch: 8

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 0
      test_y_channel: false
    lpips: # metric name, can be arbitrary
      type: calculate_lpips
      crop_border: 0
      test_y_channel: false

# logging settings
logger:
  print_freq: 500
  save_checkpoint_freq: !!float 1e4
  use_tb_logger: true
  wandb:
    project: low_light
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
